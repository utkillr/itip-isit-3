Объекты системы

	Номенклатура (состав) структурных компонентов системы вытекает из ее структурного определения.
	В нее входят объекты или элементы системы, которые имеют определенные свойства и объеденяются связями.
	Можно рассматривать всю систему как один объект, не рассматривая внутреннюю структуру - получается модель "черный ящик".

	  X 	->	  S  	->     Y
	входы	-> Система 	->	выходы
			-> 			->
			Окружающая среда

	Во многих случаях достаточно модели черного ящика для описания взаимодействия модели со средой.
	Примеры:
		Бытовая модель телевизора (ящик с экраном, который что-то показывает и говорит. Розетка, пульт)
		Модель А-0 (чобля?)
	В других случаях треубется количественое описание некоторых или всех входов или выходов.
	И тогда появляется два множества: X(множество входных переменных) и Y(множество выходных переменных)
	Тогда система принимает вид S: X -> Y

	!Элементы - те части системы, которые мы рассматриваем как неделимые.
	!Элемент = Терминальный элемент = структурно неделимый элемент.

	В результате указания элементов и подсистем получается модель состава системы

	Проблемы выделения элементов системы:
		1.	Понятия элементарности (терминальности) можно определить по-разному.
		2.	Модель состава системы является целевой. Для одной и той же системы можно построить разные модели состава.

	!Структура системы - совокупность необходимых и достаточных для достижения цели связей между элементами системы.
	В модель структуры мы включаем только конечное число связей, которые по нашему мнению существенны по отношенity-Relationsию к рассматриваемой цели.


Основные особенности структурирования систем

	1. Объекты - свойства - связи составляют обменное соотношение.
		Основа для БД - модель Entity-Relations.
			1.	В концептуальной модели объекту предметной области соответствует сущность, а свойству - атрибуты.
			2.	С точки зрения математика сущность - это отношение, определенное на декартовом произведении множеств возможных значений атрибутов. (Сущность - точка простарства, где координаты - это свойства)
			3.	С точки зрения программиста сущность - это подмножество структурного типа данных.
			4.	Связь - это отношение, определенное на декартовом произведении сущностей.
			5.	Связь может иметь собственные атрибуты, которые нельзя отнести ни к одной из сущностей.
			Вывод: с формальной точки зрения сущность и связь, как структуры данных, неразличимы (см п1 и п4) и вся модель строится на терминальных элементах одного типа, то есть атрибутах.

		Применительно к моделям, создаваемым человеком, выявлена следующая закономерность: при отображении внешнего мира человек действует по схеме: максимальная вариативность объектов - конечный набор отношений между ними.

	2. Свойства - свернутые отношения.
		Любое свойство безотносительно к концептуальной модели можно рассматривать как унарное (одноместное) отношение.
		То есть свойства объекта определяются через его отношения с другими объектами.
		Пример:
			Стекло прозрачно. Это отношение между стеклом и тем, кто на него светит. Наркомания какая-то.

	3. Структурирование систем с разными типами связей.
		Хорошо - когда в конкретной системе по большинству типов связей в конкретной системе структурирование одинаково. В этом случае система принимает дополнительную устойчивость.
		При проектировании искусственных систем об этом тезисе нужно заботиться разработчику.
		Пример:
			Организация - это искуственная система. Информационные и денежные типы связей (вертикальные - внутри организации).
			Денежные: Платим деньги сотрудникам - иначе уйдут. 
			Информационные: Для проекта люди объединяются в команду. -> у человека 2 начальника. Один работадатель, второй - главный в команде.


Типы связей в информационных моделях систем.
	
	1. Иерархия информационных моделей предметной области.
		Для большинства IT-проектов типовой иерархией является иерархия, характерная для БД:
			Предметная область (1) <- Модель предметной области (концептуальная высокоуровневая модель) (2) <- Логическая модель данных (3) <- Физическая модель данных (4) <- Собственно БД и приложение (5)
		1.	Предметная область - это часть реального мира, данные о которой мы хотим обрабабатывать.
			Специфика: Предметная область бесконечна и содержит как существенно важные понятия и данные, так и мало-/не-значащие. Важность конкретных данных зависит от цели моделирования.
		2.	Концептуальная модель предметной области - это наши знания о предметной области. Они могут быть формальные и неформальные. Неформальные - в голове у эксперта, слабо формализованные в учебниках.
			Имеется много методик описания предметной области. Наиболее популярные: методика структурного анализа SADT Из нее вытекает методика IDEF. Второй вариант - диаграммы потоков данных. Третий вариант - UML - методика объектно-ориентированного анализа.
		3.	Логическая модель - семантическая модель - описывает понятия предметной области, их взаимосвязи и ограничения на данные. Это различные варианты диаграмм Entity-Relations - прототип будущей БД.
			Тем не менее, одну и ту же модель Entity-Relations можно преобразовать в БД разного типа: реляционную, сетевую, постреляционную и т.д.
		4.	Физическая модель данных описывает модель данных средствами конкретной СУБД. Переход от ER-модели к БД - гомоморфизм.
		5.	БД и приложение - добавляется тип и объем оперативной памяти, тип процессоров, раскладка по железу и т.д. (нихуя не понял)

		Термин концептуальная модель может относится как к пункту 2, так и к пункту 3.

		Проблема:
			Не всегда понимаем, на каком уровне находимся. Чобля?
			Постоянно появляются новые методологии, которые строятся на сущностях, выдернутых из уровней 2-4.

		Полюса при использовании типов связи - это один тип связей и очень много типов связи.

	2. Связи в реляционной модели.
		В реляционной модели есть только один тип связи: связь есть / связи нет.
		Факт наличия связи устанавливается содержательно и формализуется в виде таблицы или при формировании запроса.
		Преимущества такой структуры связи:
			1.	Строгий алгебрический аппарат как математическая основа. (не требуется организовывать обход сложного графа)
			2.	Нормальизация - каждый факт вводится только один раз.
		Минусы:
			1.	Модель не естественна для человека.

	3. Связи в онтологических моделях.
		Ontos - бытие/всё
		Logos - наука.
		Онтология - наука о бытие.
		Онтология - формальное явное описание терминов предметной области и отношений между ними.
		Различные авторы предлагают различные классификации типов связей. Стандарты: описываются IDEF 5. Число связей не ограничено.